Return-Path: <matthew.fernandez@gmail.com>
Received: from compute3.internal (compute3.nyi.mail.srv.osa [10.202.2.43])
	 by sloti26m12 (Cyrus git2.5+0-git-fastmail-9457) with LMTPA;
	 Thu, 21 Nov 2013 01:24:54 -0500
X-Sieve: CMU Sieve 2.4
X-Spam-score: 0.1
X-Spam-hits: BAYES_50 0.8, FREEMAIL_FROM 0.001, RCVD_IN_DNSWL_LOW -0.7, LANGUAGES en,
  BAYES_USED user, SA_VERSION 3.3.2
X-Spam-source: IP='209.85.213.44', Host='mail-yh0-f44.google.com', Country='US',
  FromHeader='com', MailFrom='com'
X-Spam-charsets: plain='ISO-8859-1'
X-Resolved-to: blais@fastmail.fm
X-Delivered-to: blais@furius.ca
X-Mail-from: matthew.fernandez@gmail.com
Received: from mx1 ([10.202.2.200])
  by compute3.internal (LMTPProxy); Thu, 21 Nov 2013 01:24:54 -0500
Received: from mail-yh0-f44.google.com (mail-yh0-f44.google.com [209.85.213.44])
	(using TLSv1 with cipher ECDHE-RSA-RC4-SHA (128/128 bits))
	(No client certificate requested)
	by mx1.messagingengine.com (Postfix) with ESMTPS id 0EB9FF20E85
	for <blais@furius.ca>; Thu, 21 Nov 2013 01:24:54 -0500 (EST)
Received: by mail-yh0-f44.google.com with SMTP id f64so2582686yha.31
        for <blais@furius.ca>; Wed, 20 Nov 2013 22:24:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :content-type:content-transfer-encoding;
        bh=czaxhztomudyMeunjmTDErPwAvcziOYRFXg/4H4zTx8=;
        b=0V/mPivZuJKTxyQM5uVyjbYBR8+mo1RRmUcGVK4IqPfvwSCshTKmooNbUy/ye6KSD2
         6k57Bcaq8Gx9pnzeZBYZCvtlTF7GgWy32pT9EmktCAIxGYyw1f9T0pod+ApQ/lan7Qi+
         6D9hSJfopHWGrIjTl/QexvQKcrCLNDnkBVP3bmEcanJpxt8Vp+LkFVTyW8fPHwehVA2Q
         1v/l7LnjXWQJMCpMr5i5RLlJRhQ6cZzk9Z+IplDXeWiHILNMLZhPUgUL8CN+6UixWPZK
         8HpyAr5pnBSpxTYyzwhNDdG3w0Ne+a9BcOpA2133bQMTe+4gFbdBPotFajWGUMeJE3qv
         N+Wg==
X-Received: by 10.236.44.42 with SMTP id m30mr4502214yhb.7.1385015092776;
        Wed, 20 Nov 2013 22:24:52 -0800 (PST)
Received: from ?IPv6:2402:1800:4000:1:bc29:4d92:380d:ec70? ([2402:1800:4000:1:bc29:4d92:380d:ec70])
        by mx.google.com with ESMTPSA id d26sm47262157yhj.25.2013.11.20.22.24.51
        for <blais@furius.ca>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Wed, 20 Nov 2013 22:24:52 -0800 (PST)
Message-ID: <528DA731.5020502@gmail.com>
Date: Thu, 21 Nov 2013 17:24:49 +1100
From: Matthew Fernandez <matthew.fernandez@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.1.0
MIME-Version: 1.0
To: Martin Blais <blais@furius.ca>
Subject: [PATCH 4/5] Pass parameters to gendeps instead of options object
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Pass parameters to gendeps instead of options object.

This commit just expands args/opts. It's probably unwise to take as-is because
it causes gendeps to have a rather large number of (confusing) arguments.

diff -r 9cc69a1ad276 lib/python/snakefood/gendeps.py
--- a/lib/python/snakefood/gendeps.py	Thu Nov 21 17:17:30 2013 +1100
+++ b/lib/python/snakefood/gendeps.py	Thu Nov 21 17:18:39 2013 +1100
@@ -29,7 +29,8 @@



-def gendeps(args, opts, inroots):
+def gendeps(inputs, inroots, internal=0, external=False, ignores=[],
+        do_pragmas=True, ignore_unused=False, verbose=0, follow=False):
      info = logging.info

      info("")
@@ -48,7 +49,7 @@
      allerrors = []
      processed_files = set()

-    fiter = iter_pyfiles(args, opts.ignores, False)
+    fiter = iter_pyfiles(inputs, ignores, False)
      while 1:
          newfiles = set()
          for fn in fiter:
@@ -60,7 +61,7 @@

              if is_python(fn):
                  files, errors = find_dependencies(
-                    fn, opts.verbose, opts.do_pragmas, opts.ignore_unused)
+                    fn, verbose, do_pragmas, ignore_unused)
                  allerrors.extend(errors)
              else:
                  # If the file is not a source file, we don't know how to get the
@@ -76,13 +77,13 @@

              # Make sure all the files at least appear in the output, even if it has
              # no dependency.
-            from_ = relfile(fn, opts.ignores)
+            from_ = relfile(fn, ignores)
              if from_ is None:
                  continue
              infrom = from_[0] in inroots
-            if opts.internal and not infrom:
+            if internal and not infrom:
                  continue
-            if not opts.external:
+            if not external:
                  allfiles[from_].add((None, None))

              # Add the dependencies.
@@ -91,14 +92,14 @@
                  if basename(xfn) == '__init__.py':
                      xfn = dirname(xfn)

-                to_ = relfile(xfn, opts.ignores)
+                to_ = relfile(xfn, ignores)
                  into = to_[0] in inroots
-                if (opts.internal and not into) or (opts.external and into):
+                if (internal and not into) or (external and into):
                      continue
                  allfiles[from_].add(to_)
                  newfiles.add(dfn)

-        if not (opts.follow and newfiles):
+        if not (follow and newfiles):
              break
          else:
              fiter = iter(sorted(newfiles))
@@ -106,7 +107,7 @@
      # If internal is used twice, we filter down further the dependencies to the
      # set of files that were processed only, not just to the files that live in
      # the same roots.
-    if opts.internal >= 2:
+    if internal >= 2:
          filtfiles = type(allfiles)()
          for from_, tolist in allfiles.iteritems():
              filtfiles[from_] = set(x for x in tolist if x in allfiles or x == (None, None))
@@ -121,7 +122,7 @@
          ("Modules that were ignored because not used:", ERROR_UNUSED, logging.info),
          ("Modules that could not be imported:", ERROR_IMPORT, logging.warning),
          ]
-    if opts.verbose >= 2:
+    if verbose >= 2:
          reports.append(
              ("Symbols that could not be imported as modules:", ERROR_SYMBOL, logging.debug))

@@ -243,7 +244,9 @@
  def main():
      try:
          args, opts, inroots = parse_arguments()
-        depends = gendeps(args, opts, inroots)
+        depends = gendeps(args, inroots, opts.internal, opts.external,
+            opts.ignores, opts.do_pragmas, opts.ignore_unused, opts.verbose,
+            opts.follow)
          output_depends(depends)
      except KeyboardInterrupt:
          raise SystemExit("Interrupted.")
