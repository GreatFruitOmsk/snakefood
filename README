=========================================
   snakefood: Python Dependency Graphs
=========================================


Description
===========

Create a dependency graph from Python code, without running any code.

This dependency tracker has a few unique characteristics:

- It uses the AST to parse the Python files

- No module is loaded.  There is often code in the global namespace that gets
  run when you import a module.

- It works on a set of files, i.e. you do not have to specify a single script,
  you can select a package or a set of files.

- It does not automatically 'follow' dependencies between modules,
  i.e. it only considers the files and directories you specify on the
  command-line and their immediate dependencies.

- It can filter for a subset of modules; filtering is performed by the root of
  the package directory (see output dot file for the roots if you have any
  problems).

A problem with dependency trackers that run code is that they are unreliable
anyway, due to the dynamic nature of Python (the presence of imports within
function calls and __import__ hooks makes it almost impossible to always do the
right thing ).  This script aims at being right 99% of the time, and we think
that this is good enough.


Dependencies
============

- Python 2.5 or higher.


Documentation
=============

- `CHANGES <CHANGES>`_
- `TODO <TODO>`_


Download
========

- `Download </downloads/snakefood/>`_


Copyright and License
=====================

Copyright (C) 2001-2007  Martin Blais.  All Rights Reserved.

This code is distributed under the `GNU General Public License <COPYING>`_;


Author
======

Martin Blais <blais@furius.ca>

